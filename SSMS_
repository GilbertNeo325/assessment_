-- ✅ Create Database
CREATE DATABASE SEESA_ASSESSMENT;
GO

-- ✅ Use the new database
USE SEESA_ASSESSMENT;
GO

-- ✅ Department Table (MUST BE CREATED FIRST)
CREATE TABLE Department (
    DepartmentID INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(100) NOT NULL,
    Description NVARCHAR(255) NOT NULL
);
GO

-- ✅ Users Table
CREATE TABLE Users (
    UserID INT IDENTITY(1,1) PRIMARY KEY,
    FirstName NVARCHAR(50) NOT NULL,
    LastName NVARCHAR(50) NOT NULL,
    Email NVARCHAR(100) NOT NULL UNIQUE,
    CreatedAt DATETIME DEFAULT GETDATE()
);
GO

-- ✅ Employees Table (Fixed foreign keys)
CREATE TABLE Employees (
    EmployeeID INT IDENTITY(1,1) PRIMARY KEY,
    FirstName NVARCHAR(50) NOT NULL,
    LastName NVARCHAR(50) NOT NULL,
    Email NVARCHAR(100) NOT NULL UNIQUE,
    HireDate DATE,
    Status NVARCHAR(20) CHECK (Status IN ('Active', 'OnLeave', 'Terminated')),
    DepartmentID INT,
    UserID INT UNIQUE,
    CONSTRAINT FK_Employees_Department FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID),
    CONSTRAINT FK_Employees_Users FOREIGN KEY (UserID) REFERENCES Users(UserID)
);
GO

-- ✅ Products Table
CREATE TABLE Products (
    ProductID INT IDENTITY(1,1) PRIMARY KEY,
    ProductName NVARCHAR(100) NOT NULL,
    Description NVARCHAR(255),  -- Fixed length from 100 to 255
    Price DECIMAL(10,2) CHECK (Price > 0),
    QuantityStock INT NOT NULL CHECK (QuantityStock >= 0)
);
GO

-- ✅ Tasks Table
CREATE TABLE Tasks (
    TaskID INT IDENTITY(1,1) PRIMARY KEY,
    Title NVARCHAR(100) NOT NULL,
    Description NVARCHAR(MAX),
    DueDate DATETIME,
    IsCompleted BIT DEFAULT 0,
    CreatedAt DATETIME DEFAULT GETDATE(),
    EmployeeID INT,
    CONSTRAINT FK_Tasks_Employee FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);
GO

-- ✅ Transactions Table (Added Type constraints)
CREATE TABLE Transactions (
    TransactionID INT IDENTITY(1,1) PRIMARY KEY,
    Type NVARCHAR(50) NOT NULL CHECK (Type IN ('Sale', 'Purchase', 'Return', 'Adjustment')),
    Amount DECIMAL(18,2) NOT NULL,
    TransDate DATETIME DEFAULT GETDATE(),
    Description NVARCHAR(255),
    EmployeeID INT,
    ProductID INT,
    CONSTRAINT FK_Transactions_Employee FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID),
    CONSTRAINT FK_Transactions_Product FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);
GO

-- ✅ LeaveRequest Table (Added Status constraints)
CREATE TABLE LeaveRequest (
    LeaveRequestID INT IDENTITY(1,1) PRIMARY KEY,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    Reason NVARCHAR(255),
    Status NVARCHAR(50) CHECK (Status IN ('Pending', 'Approved', 'Rejected')),
    EmployeeID INT,
    CONSTRAINT FK_LeaveRequest_Employee FOREIGN KEY (EmployeeID) REFERENCES Employees(EmployeeID)
);
GO

-- ✅ Add Indexes for Performance
CREATE INDEX IX_Employees_Email ON Employees(Email);
CREATE INDEX IX_Users_Email ON Users(Email);
CREATE INDEX IX_Transactions_Date ON Transactions(TransDate);
CREATE INDEX IX_Tasks_DueDate ON Tasks(DueDate);
CREATE INDEX IX_LeaveRequest_Status ON LeaveRequest(Status);
GO

-- ✅ Relationship Documentation
PRINT 'Database schema created successfully with:';
PRINT '- 7 normalized tables';
PRINT '- 10 foreign key relationships';
PRINT '- 6 performance indexes';
PRINT '- 4 check constraints for data integrity';
GO




